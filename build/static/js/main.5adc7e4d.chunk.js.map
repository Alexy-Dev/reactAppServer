{"version":3,"sources":["components/errorMessage/error.jpg","components/header/header.js","components/header/index.js","services/gotService.js","components/spinner/index.js","components/spinner/spinner.js","components/errorMessage/index.js","components/errorMessage/errorMessage.js","components/randomChar/randomChar.js","components/randomChar/index.js","components/itemList/index.js","components/itemList/itemList.js","components/charDetails/index.js","components/charDetails/charDetails.js","components/characterPage/index.js","components/characterPage/characterPage.js","components/app/index.js","components/app/app.js","index.js"],"names":["module","exports","HeaderBlock","styled","div","_templateObject","HeaderTitle","h3","_templateObject2","HeaderLinks","ul","_templateObject3","Header","react_default","a","createElement","href","GotService","Object","classCallCheck","this","_apiBase","url","fetch","concat","res","ok","Error","status","json","getResource","map","_transformCharacter","id","characters","char","name","gender","born","died","culture","house","region","words","titles","overlord","ancestralWeapons","book","numberOfPages","publiser","released","Spinner","class","ErrorMessage","Fragment","src","img","alt","RandomChar","gotService","state","loading","error","onCharLoaded","_this","setState","onError","err","updateChar","Math","floor","random","getCharacter","then","catch","timerId","setInterval","clearInterval","_this$state","errorMessage","components_errorMessage","spinner","components_spinner","content","randomChar_View","className","Component","View","_ref","ItemList","charList","_this2","getAllCharacters","arr","_this3","item","i","key","onClick","props","onCharSelected","items","renderItems","CharDetails","onCharDetailsLoaded","prevProps","charId","_this$state$char","CharacterPage","selectedChar","Row","Col","md","components_itemList","components_charDetails","App","showRandomChar","toggleRandomChar","components_randomChar","Container","components_header","lg","size","offset","characterPage","ReactDOM","render","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.5adc7e4d.chunk.js","sourcesContent":["module.exports = \"data:image/jpeg;base64,\"","import React from 'react';\nimport styled from 'styled-components';\n\nconst HeaderBlock = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 80px;\n`;\n\nconst HeaderTitle = styled.h3`\n    font-size: 24px;\n    color: #fff;\n    margin: 0;\n`;\n\nconst HeaderLinks = styled.ul`\n    display: flex;\n    margin: 0;\n    align-items: center;\n    color: #fff;\n    list-style-type: none;\n    li {\n        margin-right: 20px;\n        font-size: 18px;\n    }\n`;\n\nconst Header = () => {\n    return (\n        <HeaderBlock>\n            <HeaderTitle>\n                <a href=\"#\">\n                Game of Thrones DB\n                </a>\n            </HeaderTitle>\n            <HeaderLinks>\n                <li>\n                    <a href=\"#\">Characters</a>\n                </li>\n                <li>\n                    <a href=\"#\">Houses</a>\n                </li>\n                <li>\n                    <a href=\"#\">Books</a>   \n                </li>\n            </HeaderLinks>\n        </HeaderBlock>\n    );\n};\n\nexport default Header;","import Header from './header';\n\nexport default Header;","export default class GotService {\r\n\r\n    constructor(){\r\n        this._apiBase = 'https://www.anapioficeandfire.com/api';  //способ задать основу url, чтобы не повторять ее при каждом запросе\r\n    }\r\n    async getResource(url) {   //необходимо отправлять асинхронный запрос\r\n        const res = await fetch(`${this._apiBase}${url}`);       //дождаться отработки этой команды запроса\r\n    \r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n        return await res.json();      //дождаться отработки этой команды ответа от сервера    \r\n    };\r\n    async getAllCharacters() {\r\n        const res = await this.getResource('/characters?page=5&pageSize=10');  //настраиваем получение с 5 страницы 10 персонажей\r\n        return res.map(this._transformCharacter);\r\n    }\r\n    async getCharacter(id) {\r\n        const characters = await this.getResource(`/characters/${id}`);\r\n        return this._transformCharacter(characters);  //настраиваем получение одного персонажа по id\r\n    }\r\n    getAllHouses() {\r\n        return this.getResource(`/houses/`);  //настраиваем получение одного персонажа по id\r\n    }\r\n    getHouse(id) {\r\n        return this.getResource(`/houses/${id}`);  //настраиваем получение одного персонажа по id\r\n    }\r\n    getAllBooks() {\r\n        return this.getResource(`/books/`);  //настраиваем получение одного персонажа по id\r\n    }\r\n    getBook(id) {\r\n        return this.getResource(`/books/${id}`);  //настраиваем получение одного персонажа по id\r\n    }\r\n    _transformCharacter(char){\r\n        return{\r\n            name: char.name,\r\n            gender: char.gender,\r\n            born: char.born,\r\n            died: char.died,\r\n            culture: char.culture\r\n        }\r\n    }\r\n    _transformHouse(house){\r\n        return{\r\n            name: house.name,\r\n            region: house.region,\r\n            words: house.words,\r\n            titles: house.titles,\r\n            overlord: house.overlord,\r\n            ancestralWeapons: house.ancestralWeapons            \r\n        }\r\n    }\r\n    _transformBooks(book){\r\n        return{\r\n            name: book.name,\r\n            numberOfPages: book.numberOfPages,\r\n            publiser: book.publiser,\r\n            released: book.released\r\n        }\r\n    }\r\n}\r\n\r\n// const got = new GotService();\r\n\r\n// got.getAllCharacters()\r\n//     .then(res => {\r\n//         res.forEach( item => console.log(item.name)) //метод получения конкретного свойства объектов списка\r\n//     });\r\n\r\n//     got.getCharacter(130)\r\n//     .then(res => console.log(res));\r\n","import Spinner from \"./spinner\";\r\nexport default Spinner;","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div class=\"loadingio-spinner-spin-xvwk53bx69e\">\r\n        <div class=\"ldio-de7w7gwgxr\">\r\n        <div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div>\r\n        </div></div>\r\n    )\r\n};\r\n\r\nexport default Spinner;","import ErrorMessage from \"./errorMessage\";\r\n\r\nexport default ErrorMessage;","import React from 'react';\r\nimport './errorMessage.css';\r\nimport img from './error.jpg';   //можно импортировать изображение прямо в компонент\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <>\r\n            {/* <img src={process.env.PUBLIC_URL + '/img/error.jpg'} alt='error'></img> */}\r\n            <img src={img} alt='error'></img>\r\n            <span>Something goes wrong</span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import React, {Component} from 'react';\nimport './randomChar.css';\nimport gotService from '../../services/gotService';\nimport Spinner from '../spinner';\nimport ErrorMessage from '../errorMessage';\n\nexport default class RandomChar extends Component {\n\n    // constructor() {\n    //     super();\n    //     // this.updateChar();\n    //     // this.timerId = setInterval(this.updateChar, 1500);\n    //     // clearInterval(this.timerId);\n    //     console.log('constructor');\n    // }\n\n    gotService = new gotService();\n    state = {\n        char: {},\n        loading: true,\n        error: false   \n    }\n    componentDidMount() {\n        this.updateChar();\n        this.timerId = setInterval(this.updateChar, 1500);\n    }\n    componentWillUnmount() {\n        clearInterval(this.timerId);   //лучшее место для остановки таймаутов и отписки от сервисов\n    }\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        })\n    }\n\n    onError = (err) => {\n        this.setState({\n            error: true,\n            loading: false\n        });\n\n    }\n\n    updateChar = () => {\n        // const id = 12000\n        // console.log('update');\n        const id = Math.floor(Math.random()*140 + 25);   //чтобы настроить рандомное получение персонажа в промежутке от 25 до 140\n        this.gotService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    render() {\n        const { char, loading, error } = this.state;\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n\n        const content = !(loading || error) ? <View char={char}/> : null;\n        // const content = !loading ? <View char={char}/> : null;\n       \n\n        return (\n            <div className=\"random-block rounded\">\n                {errorMessage}\n                {spinner}\n                {content}                           \n            </div>\n        );\n    }\n}\n\nconst View = ({char}) => {\n    const {name, gender, born, died, culture} = char;\n    return (\n        <>\n        <h4>Random Character: {name}</h4>\n                <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Gender </span>\n                        <span>{gender}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Born </span>\n                        <span>{born}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Died </span>\n                        <span>{died}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Culture </span>\n                        <span>{culture}</span>\n                    </li>                    \n                </ul>\n        </>\n    )\n}","import RandomChar from './randomChar';\n\nexport default RandomChar;","import ItemList from './itemList';\n\nexport default ItemList;","import React, {Component} from 'react';\nimport './itemList.css';\nimport gotService from '../../services/gotService';\nimport ErrorMessage from '../errorMessage';\nimport Spinner from '../spinner';\n\nexport default class ItemList extends Component {\n\n    gotService = new gotService();\n\n    state = {\n        charList: null,\n        error: false\n    }\n\n    componentDidMount() {\n        this.gotService.getAllCharacters()\n            .then( (charList) => {\n                this.setState({\n                    charList,\n                    error: false\n                });\n            })\n            .catch(() => {this.onError()});\n    }\n\n    componentDidCatch(){\n        this.setState({\n            charList: null,\n            error: true\n        })\n    }\n\n    onError(status){\n        this.setState({\n            charList: null,\n            error: true\n        })\n    }\n\n    renderItems(arr) {\n        return arr.map((item, i) => {\n            const {id, name} = item;\n            return (\n                <li\n                key={i}\n                className=\"list-group-item\"\n                onClick={ () => this.props.onCharSelected(41 + i)}>\n                    {name}\n                </li>\n            )\n        })\n    }\n\n    render() {\n\n        const {charList, error} = this.state;\n\n        if (error) {\n            return <ErrorMessage/>\n        }\n        \n\n        if (!charList) {\n            return <Spinner/>\n        }\n        const items = this.renderItems(charList);\n\n        return (\n            <ul className=\"item-list list-group\">\n                {items}\n              \n                {/* <li className=\"list-group-item\">\n                    John Snow\n                </li>\n                <li className=\"list-group-item\">\n                    Brandon Stark\n                </li>\n                <li className=\"list-group-item\">\n                    Geremy\n                </li> */}\n            </ul>\n        );\n    }\n}","import CharDetails from './charDetails';\nexport default CharDetails;","import React, {Component} from 'react';\nimport './charDetails.css';\nimport gotService from '../../services/gotService';\nimport ErrorMessage from '../errorMessage';\nimport Spinner from '../spinner';\n\nexport default class CharDetails extends Component {\n\n    gotService = new gotService();\n    state = {\n        char: null,\n        loading: true,\n        error: false\n    }\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) {       //всегда делаем проверку на совпадение с предыдущими пропсами\n            this.updateChar();\n        }\n    }\n\n    onCharDetailsLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        })\n    }\n\n    updateChar() {\n        const {charId} = this.props;\n        if (!charId) {\n            return;\n        }\n\n        this.setState({\n            loading: true\n        })\n\n        this.gotService.getCharacter(charId)\n            // .then((char) => {\n            //     this.setState({char})\n            .then( this.onCharDetailsLoaded)\n            .catch( () => this.onError())\n            \n    }\n    onError() {\n        this.setState({\n            char: null,\n            error: true\n        })\n    }\n\n    render() {\n\n        if (!this.state.char && this.state.error) {\n            return <ErrorMessage/>\n        } else if (!this.state.char) {\n            return <span className='select-error'>Please select a character</span>\n        }\n        const {name, gender, born, died, culture} = this.state.char;\n        \n        if (this.state.loading) {\n            return (\n                <div className=\"char-details rounded\">\n                    <Spinner/>\n                </div>\n            )\n        }\n        return (\n            <div className=\"char-details rounded\">\n                <h4>{name}</h4>\n                <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Gender</span>\n                        <span>{gender}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Born</span>\n                        <span>{born}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Died</span>\n                        <span>{died}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Culture</span>\n                        <span>{culture}</span>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}","import CharacterPage from \"./characterPage\";\r\nexport default CharacterPage;","import React, { Component } from 'react';\r\nimport {Col, Row, Container} from 'reactstrap';\r\nimport ItemList from '../itemList';\r\nimport CharDetails from '../charDetails';\r\nimport ErrorMessage from '../errorMessage';\r\n\r\nexport default class CharacterPage extends Component {\r\n\r\n    state = {\r\n        selectedChar: 120,\r\n        error: false\r\n    }\r\n    onCharSelected = (id) => {\r\n        this.setState({\r\n            selectedChar: id\r\n        })\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n        return (\r\n            <Row>\r\n                <Col md='6'>\r\n                    <ItemList onCharSelected={this.onCharSelected}/>\r\n                </Col>\r\n                <Col md='6'>\r\n                    <CharDetails charId={this.state.selectedChar}/>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n\r\n}","import App from './app';\n\nexport default App;\n","import React, { Component } from 'react';\nimport {Col, Row, Container} from 'reactstrap';\nimport Header from '../header';\nimport RandomChar from '../randomChar';\nimport ItemList from '../itemList';\nimport CharDetails from '../charDetails';\nimport ErrorMessage from '../errorMessage';\nimport CharacterPage from '../characterPage';\n// import styled from 'styled-components';\nimport './app.css';\n\nexport default class App extends Component {\n// const App = () => {\n    state = {\n        showRandomChar: true,\n        selectedChar: 120,\n        error: false\n    }\n    toggleRandomChar = () => {\n        this.setState((state) => {\n            return {\n                showRandomChar: !state.showRandomChar\n            }\n        });       \n    }\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n\n    }\n\n    render() {\n        if (this.state.error) {\n            return <ErrorMessage/>\n        }\n        const char = this.state.showRandomChar ? <RandomChar/> : null;\n        return (\n            <> \n                <Container>\n                    <Header />\n                </Container>\n                <Container>\n                    <Row>\n                        <Col lg={{size: 5, offset: 0}}>\n                            {char}\n                            <button \n                                className=\"toggle-btn\"\n                                onClick={this.toggleRandomChar}>Toggle random character</button>\n                        </Col>\n                    </Row>\n                    {/* <Row>\n                        <Col md='6'>\n                            <ItemList onCharSelected={this.onCharSelected}/>\n                        </Col>\n                        <Col md='6'>\n                            <CharDetails charId={this.state.selectedChar}/>\n                        </Col>\n                    </Row> */}\n                    <CharacterPage/>\n                </Container>\n            </>\n        );\n    }\n};\n\n// export default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}